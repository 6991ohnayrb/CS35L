ASSIGNMENT1 - HOMEWORK

-----1.1-----
1. not required to show how to run emacs
2. C-s PUBLIC [ENTER]
3. C-s Lab [ENTER] M-b
4. C-s self- [ENTER] M-b
5. C-s arro [ENTER] M-b
6. C-e
7. C-a
8. C-s to search, C-e to end of line, C-a to start of line
9. I used commands instead of arrows
10. C-x C-c

-----1.2-----
1. not required to show how to run emacs
2. C-s <! C-a C-k
3. C-s ! C-a C-k
4. C-s <! C-a C-k C-k C-k
5. C-s ! C-k

-----1.3-----
1. not required to show how to run emacs
2. C-s Assignment 1 [ENTER] [DELETE] 37 C-s M-p [ENTER] [ENTER] [DELETE] 37
3. C-x [ C-s UTF [ENTER] [DELETE] [DELETE] S-ASCII
4. C-s </ol> [ENTER] [UP ARROW] [ENTER]
5. C-x C-c y [ENTER]

-----1.4-----
1. cat exer2.html exer2.diff > exer4.html [ENTER]
2. not required to show how to run emacs
3. M-r C-r <! [ENTER] C-@ C-s - > M-w M-g g 339 [ENTER] M-b M-b M-f C-y
4. M-r C-r C-r <! [ENTER] C-@ C-e C-n C-n M-w M-g g 301 [ENTER] C-y C-a
   C-d C-p C-d M-> C-r M-p C-r C-r C-r [ENTER] C-@ C-e M-w M-g g 94 [ENTER]
   C-y M-> C-r M-p C-r C-r C-r C-r [ENTER] C-@ C-e M-w M-g g 18 [ENTER] C-y
5. M-> C-r C-r --- C-r [ENTER] [BACKSPACE]
6. C-x u
7. <!-- C-o M-% --> [ENTER] --> <!-- [ENTER] [SP] [SP] [SP] [SP] M-> -->
8. M-< M-% <ol> [ENTER] <Ol> [ENTER]
   I found 7 instances.
9. diff -u exer1.html exer4.html > exer4.diff [ENTER]

-----1.5-----
1. emacs [ENTER] M-x mkdir [ENTER] ~/junk
2. C-x d ~/junk [ENTER]
   C-x b hello.c <COPY AND PASTE CODE FROM ASSIGNMENT> C-x C-S
3. M-x compile gcc hello.c -o hello [ENTER]
4. M-x compile [ENTER] ./hello [ENTER]
   C-x C-w hello-out [ENTER]
5. C-SP M-> C-w C-x b key1.txt M-> C-y [ENTER]
    Log:
    -*- mode: compilation; default-directory: "~/CS35L/junk/" -*-
    Compilation started at Tue Oct 11 20:58:12

    ./hello
    #include <stdio.h>
    int
    main (void)
    {
    char n = '\n';
    char b = '\\';
    char q = '"';
    char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c
    char n = '%cn';%c
    char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c
    printf
    (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c
    return 0;%c}%c";
    printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
    return 0;
    }

    Compilation finished at Tue Oct 11 20:58:13

-----1.6-----
1. C-x b [ENTER]
2. (random) C-j
3. (setq x (random 50)) C-j (setq y (random 50)) C-j
4. ( * x y)
   I get 21 x 34 = 714
5. M-:(* x y)
   I still get 21 x 34 = 714 which is mathematically correct
6. No, these numbers are not truly random. They are seeded and use an algorithm
   that try to mimic randomness. However, since theses numbers are being
   generated on a computer, true randomness can not be achieved.
7. If it were truly random, the probability that I would receive this product
   is 1/50 * 1/50 = 0.0004 since both x and y have an equal probability to have
   each of the numbers as its value. 
